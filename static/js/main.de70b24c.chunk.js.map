{"version":3,"sources":["App.module.css","App.js","index.js"],"names":["module","exports","App","useState","sec","setSec","status","setStatus","waitTimeStamp","setWaitTimeStamp","useEffect","unsubscribe$","Subject","interval","pipe","takeUntil","subscribe","val","console","log","next","complete","start","React","useCallback","stop","reset","wait","timeStamp","Date","getTime","className","style","container","time","toISOString","slice","onClick","render","document","getElementById","ReactDOM","StrictMode"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,KAAO,oB,oICO7C,SAASC,IACtB,MAAsBC,mBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,mBAAS,GAAjD,mBAAOK,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACR,IAAMC,EAAe,IAAIC,IASzB,OARAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACM,UAAXV,GACFD,GAAO,SAAAY,GAAG,OAAIA,EAAM,UAGxBC,QAAQC,IAAI,iCAAkC,kBAAmBX,GAC5D,WACLG,EAAaS,OACbT,EAAaU,cAGhB,CAACf,IAEF,IAAMgB,EAAQC,IAAMC,aAAY,WAC9BjB,EAAU,WACT,IAEGkB,EAAOF,IAAMC,aAAY,WAC7BjB,EAAU,QACVF,EAAO,KACN,IAEGqB,EAAQH,IAAMC,aAAY,WAC9BnB,EAAO,KACN,IAEGsB,EAAOJ,IAAMC,aAAY,WAC7B,IAAMI,GAAW,IAAIC,MAAOC,UACzBF,EAAUpB,EAAc,IACzBD,EAAU,QAGZE,EAAiBmB,KAChB,CAACpB,IAEJ,OACE,sBAAKuB,UAAWC,IAAMC,UAAtB,UACE,uBAAMF,UAAWC,IAAME,KAAvB,cAA+B,IAAIL,KAAKzB,GAAK+B,cAAcC,MAAM,GAAI,OACrE,wBAAQL,UAAU,WAAWM,QAASf,EAAtC,SACY,SAAThB,EAAgB,SAAS,UAE5B,wBAAQyB,UAAU,UAAUM,QAASZ,EAArC,kBAGA,wBAAQY,QAASX,EAAjB,mBACA,wBAAQW,QAASV,EAAjB,qBAKNW,iBAAO,cAACpC,EAAD,IAASqC,SAASC,eAAe,SC/DxCC,IAASH,OACP,cAAC,IAAMI,WAAP,UACE,cAACxC,EAAD,MAEFqC,SAASC,eAAe,W","file":"static/js/main.de70b24c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2mxdu\",\"time\":\"App_time__2sPGF\"};","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\n// import \"./style.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { interval, Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport style from './App.module.css'\r\n \r\nexport default function App() {\r\n  const [sec, setSec] = useState(0);\r\n  const [status, setStatus] = useState(\"stop\");\r\n  const [waitTimeStamp, setWaitTimeStamp]=useState(0)\r\n\r\n  useEffect(() => {\r\n    const unsubscribe$ = new Subject();\r\n    interval(1000)\r\n      .pipe(takeUntil(unsubscribe$))\r\n      .subscribe(() => {\r\n        if (status === \"start\") {\r\n          setSec(val => val + 1000);\r\n        }\r\n      });\r\n      console.log('%cApp.js line:23 waitTimeStamp', 'color: #007acc;', waitTimeStamp);\r\n    return () => {\r\n      unsubscribe$.next();\r\n      unsubscribe$.complete();\r\n    };\r\n  },\r\n   [status]);\r\n \r\n  const start = React.useCallback(() => {\r\n    setStatus(\"start\");\r\n  }, []);\r\n \r\n  const stop = React.useCallback(() => {\r\n    setStatus(\"stop\");\r\n    setSec(0);\r\n  }, []);\r\n \r\n  const reset = React.useCallback(() => {\r\n    setSec(0);\r\n  }, []);\r\n \r\n  const wait = React.useCallback(() => {\r\n    const timeStamp= new Date().getTime()\r\n    if(timeStamp-waitTimeStamp<300){\r\n      setStatus(\"wait\");\r\n      return\r\n    }\r\n    setWaitTimeStamp(timeStamp)   \r\n  }, [waitTimeStamp]);\r\n \r\n  return (\r\n    <div className={style.container}>\r\n      <span className={style.time}> {new Date(sec).toISOString().slice(11, 19)}</span>\r\n      <button className=\"startBtn\" onClick={start}>\r\n        {status==='wait'?'Resume':'Start'}\r\n      </button>\r\n      <button className=\"stopBtn\" onClick={stop}>\r\n        Stop\r\n      </button>\r\n      <button onClick={reset}>Reset</button>\r\n      <button onClick={wait}>Wait</button>\r\n    </div>\r\n  );\r\n}\r\n \r\nrender(<App />, document.getElementById(\"root\"));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}